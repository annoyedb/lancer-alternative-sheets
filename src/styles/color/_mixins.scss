@use "sass:map";
@use "sass:meta";

@mixin theme($theme-map)
{
    @each $name, $color in $theme-map
    {
        --la-#{$name}: #{$color};
    }
}

@mixin generate-lancer-classes($theme-map)
{
    @each $name, $color in $theme-map
    {
        @if meta.type-of($color)=='color'

        {
            .la-outl-#{$name}
            {
                -webkit-text-stroke: var(--la-size) var(--la-#{$name});
            }

            .la-bckg-#{$name}
            {
                background-color: var(--la-#{$name}) !important;
            }

            .la-text-#{$name}
            {
                color: var(--la-#{$name}) !important;
            }

            .la-brdr-#{$name}
            {
                border-color: var(--la-#{$name});
            }

            .la-prmy-#{$name}
            {
                --la-primary-color: var(--la-#{$name});
            }

            .la-scdy-#{$name}
            {
                --la-secondary-color: var(--la-#{$name});
            }

            .la-trty-#{$name}
            {
                --la-tertiary-color: var(--la-#{$name});
            }
        }
    }
}

@mixin generate-manufacturer-class($theme-map)
{
    $theme-id: map.get($theme-map, theme-id);
    $primary-color: map.get($theme-map, primary);

    .la-bckg-#{$theme-id}
    {
        background-color: #{$primary-color} !important;
    }

    .la-text-#{$theme-id}
    {
        color: #{$primary-color} !important;
    }

    .la-brdr-#{$theme-id}
    {
        border-color: #{$primary-color};
    }

    .la-prmy-#{$theme-id}
    {
        --la-primary-color: #{$primary-color};
    }

    --#{$theme-id}-theme: #{$primary-color};
}