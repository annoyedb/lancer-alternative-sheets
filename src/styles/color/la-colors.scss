@use 'themes/gms' as gms;
@use 'themes/gmsdark' as gmsdark;
@use 'themes/ipsn' as ipsn;
@use 'themes/ssc' as ssc;
@use 'themes/horus' as horus;
@use 'themes/ha' as ha;
@use 'themes/galsim' as galsim;
@use 'themes/msmc' as msmc;
@use 'themes/common' as common;
@use 'lancer-colors' as lancer;
@use '../mixins' as *;

:root
{
    --size: 1px;
    
    // TODO: when fully moving away from relying on Lancer system colors (e.g. --dark-text)
    // add our themes directly to the root here. Unfortunately this means to replace them on 
    // theme change would have to be done via TypeScript, therefore we need to also hardcode 
    // the SCSS values in the TypeScript file and swap by name on theme changes.
    // 
    // Which is why it isn't currently done lol
}

.la-bckg-transparent
{
    background-color: transparent;
}

.la-brdr-transparent
{
    border-color: transparent;
}

.la-common
{
    @include theme(common.$common-theme);

    @include generate-manufacturer-class(gms.$gms-theme);
    @include generate-manufacturer-class(ipsn.$ipsn-theme);
    @include generate-manufacturer-class(ssc.$ssc-theme);
    @include generate-manufacturer-class(horus.$horus-theme);
    @include generate-manufacturer-class(ha.$ha-theme);
    @include generate-manufacturer-class(galsim.$galsim-theme);
    @include generate-manufacturer-class(msmc.$msmc-theme);
}

// Themes
.la-gms
{
    @include theme(gms.$gms-theme);
}

.la-gmsdark
{
    @include theme(gmsdark.$gmsdark-theme);
}

.la-ipsn
{
    @include theme(ipsn.$ipsn-theme);
}

.la-ssc
{
    @include theme(ssc.$ssc-theme);
}

.la-horus
{
    @include theme(horus.$horus-theme);
}

.la-ha
{
    @include theme(ha.$ha-theme);
}

.la-galsim
{
    @include theme(galsim.$galsim-theme);
}

.la-msmc
{
    @include theme(msmc.$msmc-theme);
}

@include generate-lancer-classes(common.$common-theme);
@include generate-lancer-classes(gms.$gms-theme);